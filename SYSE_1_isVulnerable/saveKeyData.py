#!/usr/bin/env python
# coding: utf-8

import os
import pickle

import pandas as pd

from SYSE_2_vulnerabilityType.MLMethods import get_sard_cve_ids

def saveKeyData(traindataSet_path):
    for filename in os.listdir(traindataSet_path):
        if filename.endswith(".DS_Store"):
            continue
        if filename.endswith(".pkl"):
            f = open(os.path.join(traindataSet_path, filename),"rb")
            print("Save metadata from filename: " + filename)
            data = pickle.load(f)
            ids = data[5]
            mytype = data[4]
            label1 = data[1]
            print(ids[:20], "\n")
            print(label1[:20], "\n")
            print(mytype[:20], "\n") 
            metadata = "caseID, realLabel, vType \n" 
            for i in range (len(ids)):
                mystr = "{},{},{}\n".format(ids[i],label1[i],mytype[i])
                metadata = metadata + mystr
            fp = open("KeyData_" + filename + ".txt", "w", encoding="utf-8")
            fp.write(metadata)
            fp.close()
            

def saveKeyData2(traindataSet_path):
    for filename in os.listdir(traindataSet_path):
        if filename.endswith(".DS_Store"):
            continue
        if filename.endswith(".pkl"):
            f = open(os.path.join(traindataSet_path, filename),"rb")
            print("Save metadata from filename: " + filename)
            data = pickle.load(f)
            ids = data[5]
            mytype = data[4]
            sard_cve_ids = get_sard_cve_ids(data[3])
            group_ids, null_indices = get_group_ids(sard_cve_ids)
            if len(null_indices) > 0:
                # Drop rows that don't contain a group id
                for i in null_indices:
                    # TODO
                    print(i)

            print(ids[:20], "\n")
            # print(group_id[:20], "\n")
            print(mytype[:20], "\n") 
            metadata = "caseID, realLabel, vType \n" 
            for i in range (len(ids)):
                mystr = "{},{},{}\n".format(ids[i],group_id[i],mytype[i])
                metadata = metadata + mystr
            fp = open("KeyData_" + filename + ".txt", "w", encoding="utf-8")
            fp.write(metadata)
            fp.close()
            
def get_group_ids(sard_cve_ids):
    i = 0
    group_ids = []
    null_indices = []
    groups_df = pd.read_csv('../data/CVE/SARD_CVE_to_groups.csv', index_col=0)
    for sard_cve_id in sard_cve_ids:
        try:
            row = groups_df.loc[groups_df['Original ID'] == sard_cve_id]
            group_id = int(row['Group ID'].item())
            group_ids.append(group_id)
        except:
            print(f'SARD {sard_cve_id} does not have a group id.')
            null_indices.append(i)
        
        i += 1
    return group_ids, null_indices
