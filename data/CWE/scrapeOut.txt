<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<?xml version="1.0" encoding="iso-8859-1"?>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head >
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="description" content="Common Weakness Enumeration (CWE) is a list of software weaknesses." />
	<meta http-equiv="X-UA-Compatible" content="IE=Edge">
	<link rel="shortcut icon" href="/favicon.ico" />
	<link href="/css/main.css?version=4.0.022420" rel="stylesheet" type="text/css" />
	<!--[if IE]>
	<link rel="stylesheet" type="text/css" href="/css/ie.css?version=1.7" />
	<![endif]-->
	
	<script src="/includes/browserheight.js" language="JavaScript" type="text/javascript"></script>
	<script src="/includes/jquery.js" language="JavaScript" type="text/javascript"></script>               	
    	<script src="/includes/cwe_minimizer.js" language="JavaScript" type="text/javascript"></script>
	<script src="/includes/cookie.js" language="JavaScript" type="text/javascript"></script>               	
	<script src="/includes/includeglossarydef.js" language="JavaScript" type="text/javascript"></script>
	<link href="/css/print.css?version=1.11" rel="stylesheet" media="print" type="text/css" />
	<link href="/css/user_skins/complete.css" rel="stylesheet" type="text/css" />
	<noscript>
	<style type="text/css">
		#script { visibility:collapse; visibility:hidden; font-size:0px; height:0px; width:0px  }
		#noscript { visibility:visible; font-size:inherit;  height:inherit; width:inherit}
	</style>
	</noscript>
	<title>CWE -

		CWE-754: Improper Check for Unusual or Exceptional Conditions (4.5)                </title>
</head>
<body onload="onloadCookie()">
<a name="top" id="top"></a>
	<div id="MastHead" style="width:100%">
	
	        <div style="width:70%;float:left;padding-top:20px;padding-left:10px;padding-bottom:10px;">
	                <a href="/index.html" style="color:#32498D; text-decoration:none">
	                <img src="/images/cwe_logo.jpg" width="153" height="55" style="float:left;border:0;margin-right:6px" alt="CWE" />
	                <h1 style="color:#314a8d;font-size:1.5em;font-family:'Verdana',sans-serif;text-shadow: 2px 2px #eee;margin: .1em auto">Common Weakness Enumeration</h1>
	                <p style="color:#314a8d;font-style:italic;font-family:'Times New Roman';font-size:1em;text-shadow: 2px 2px #eee;margin:.1em auto 0 auto">A Community-Developed List of Software &amp; Hardware Weakness Types</p>
	                </a>
	        </div>
	
	</div><!--End Masthead div-->
	
	<div style="width:20%;float:right;padding-top:8px;text-align:right;padding-right:14px;padding-bottom:8px;"><a href="/top25/" title="CWE Top 25"><img src="/images/cwe_top_25_logo_horiz.png" height="80" border="0" alt="CWE Top 25 Most Dangerous Weaknesses" style="vertical-align:bottom"/></a></div>

<div id="HeaderBar" class="noprint">
<table width="100%" border="0" cellpadding="0" cellspacing="0">  
	<tr> 
		<td width="100%" align="left" style="padding-left:10px; font-size:75%;"> 
                <a href="/" >Home</a>  &gt;  <a href="/data/index.html" >CWE List</a>  &gt;  

                CWE- Individual Dictionary Definition (4.5)                		&nbsp;
		</td>
		<td align="right" nowrap="nowrap" style="padding-right:12px">
		<!-- Begin /includes/search_cwe_id.html -->
<div class="noprint">
  <form action="/cgi-bin/jumpmenu.cgi" align="right" style="padding:0px; margin:0px">
	ID <label for="id" style="padding-right:5px">Lookup:</label>
    <input id="id" name="id" type="text" style="width:50px; font-size:80%" maxlength="10" />
	<input value="Go" style="padding: 0px; font-size:80%" type="submit">
  </form>
</div>
<!-- End /includes/search_cwe_id.html --> 
		</td>
	</tr>
</table>
</div> <!--//HeaderBar-->
<div class="yesprint">
<hr width="100%" size="1" style="clear:both" color="#000000" />
</div>

<div class="topnav">
<ul>
<li><a href="/index.html">Home</a></li>
<li>
        <div class="dropdown">
          <a href="/about/index.html"><button class="dropbtn">About</button></a>
          <div class="dropdown-content">
            <a href="/about/index.html">Overview</a>
            <a href="/about/board.html">Board</a>
            <a target="_blank" href="http://making-security-measurable.1364806.n2.nabble.com/CWE-CAPEC-Board-f7589808.html">Board Discussion Archive</a>
            <a href="/about/board_archive.html">Board Meetings Archive</a>            
            <a href="/documents/glossary/index.html">Glossary</a>
            <a href="/about/history.html">History</a>             
            <a href="/about/sources.html">Sources</a>
            <a href="/about/documents.html">Documents</a>
            <a href="/about/faq.html">FAQs</a>
          </div>
        </div>
</li>
<li>
        <div class="dropdown">
          <a href="/data/index.html"><button class="dropbtn">CWE List</button></a>
          <div class="dropdown-content">
            <a href="/data/index.html">Latest Version</a>
            <a href="/data/downloads.html">Downloads</a>
            <a href="/data/reports.html">Reports</a>
            <a href="/data/pdfs.html">Visualizations</a>
            <a href="/data/archive.html">Archive</a>
          </div>
        </div>
</li>
<li>
        <div class="dropdown">
          <a href="/scoring/index.html"><button class="dropbtn">Scoring</button></a>
          <div class="dropdown-content">
            <a href="/scoring/index.html">Methodologies</a>
            <a href="/community/swa/priority.html">Prioritizing Weaknesses</a>
            <a href="/cwss/cwss_v1.0.1.html">CWSS</a>
            <a href="/cwraf/index.html">CWRAF</a>
            <a href="/top25/index.html">Top 25</a>
          </div>
        </div>
</li>
<li>
        <div class="dropdown">
          <a href="/documents/cwe_usage/guidance.html"><button class="dropbtn">Mapping Guidance</button></a>
          <div class="dropdown-content">
            <a href="/documents/cwe_usage/guidance.html">CVE &rarr; CWE Mapping Guidance</a>
            <a href="/documents/cwe_usage/quick_tips.html">CVE &rarr; CWE Mapping Quick Tips</a>
            <a href="/documents/cwe_usage/mapping_examples.html">CVE &rarr; CWE Mapping Examples</a>
            <a href="/documents/cwe_usage/common_terms_cheatsheet.html">Common Terms Cheatsheet</a>
          </div>
        </div>
</li>
<li>
        <div class="dropdown">
          <a href="/community/index.html"><button class="dropbtn">Community</button></a>
          <div class="dropdown-content">
            <a href="/community/index.html">Community</a>
            <a href="/community/members.html">Members</a>
            <a href="/community/citations.html">Use &amp; Citations</a>
            <a href="/research/index.html">Research</a>
            <a href="/compatible/index.html">Compatibility</a>
            <a href="/community/registration.html">Discussion List</a>
            <a href="http://making-security-measurable.1364806.n2.nabble.com/Common-Weakness-Enumeration-f4149182.html">Discussion Archives</a>
            <a href="/community/submissions/guidelines.html">Content Submissions</a>
          </div>
        </div>
</li>
<li>
        <div class="dropdown">
          <a href="/news/index.html"><button class="dropbtn">News</button></a>
          <div class="dropdown-content">
            <a href="/news/index.html">Current News</a>
            <a href="https://twitter.com/CweCapec" target="_blank" rel="noopener noreferrer">Twitter <img src="/images/twitter_sm.png" width="14" height="14" style="position:relative; vertical-align:bottom; padding-left:3px; top:-1px" title="Twitter"></a>
            <a href="https://www.linkedin.com/showcase/cve-cwe-capec" target="_blank" rel="noopener noreferrer">LinkedIn <img src="/images/linkedin_sm.jpg" width="14" height="14" style="position:relative; vertical-align:bottom; padding-left:3px; top:-1px" title="LinkedIn"></a>
			      <a href="https://www.youtube.com/channel/UCpY9VIpRmFK4ebD6orssifA" target="_blank" rel="noopener noreferrer">YouTube <img src="/images/youtube.png" width="14" height="14" style="position:relative; vertical-align:bottom; padding-left:3px; top:-1px" alt="YouTube"></a>            
			      <a href="https://medium.com/@CWE_CAPEC" target="_blank" rel="noopener noreferrer">Medium <img src="/images/medium_sm.png" width="14" height="14" style="position:relative; vertical-align:bottom; padding-left:3px; top:-1px" alt="Medium"></a>
            <a href="/news/podcast.html">Podcast</a>             
            <a href="/news/newsletters.html">Free Newsletter</a>            
            <a href="/news/archives/index.html">News Archive</a>
        </div> 
</li>

<li style="border-color:#aaaaaa"><a href="/find/index.html">Search</a></li>
</ul>

</div>

<table width="100%" border="0" cellspacing="0" cellpadding="0" id="MainPane">
  <tr>
	<!-- begin left side menu -->
    <td valign="top" rowspan="2" id="LeftPane">
	<!--include virtual="/includes/leftsidemenu.html" Removed 11212016--> 
	<script type="text/javascript">browserheight();</script>
	</td>
	<!-- end left side menu -->
    <td style="height:1px"></td>
	<!-- begin right column -->
	<td valign="top" align="center" rowspan="2" nowrap="nowrap" id="RightPane">

                	</td>
	<!-- end right side menu -->
  </tr>
  <tr>
	<!-- begin content pane -->
    <td valign="top" width="100%" id="Contentpane">
	
	<!--Glossary tags-->
	
<div id="styled_popup" name="styled_popup" style="display:none; position:fixed; top:300; height:auto; width:300px; z-index:1000">
<table width="300" cellpadding="0" cellspacing="0" border="0" style="border:1px solid #32498D;">
<tr style="background-color:#32498D; color:#ffffff;">
<td width="100%" style="padding:1px 5px 1px 5px; border-bottom:1px solid #000000"><div width="100%" style="font-weight:bold;">CWE Glossary Definition</div></td>
<td nowrap="nowrap" style="padding:1px; border-bottom:1px solid #000000" valign="top"><a href="javascript:styledPopupClose();"><img src="/images/layout/close.gif" border="0"  alt="x"></a></td>
</tr>
<tr><td colspan="2" style="background: url(/images/layout/ylgradient.jpg); background-repeat: repeat-x repeat-y; padding:5px; background-color:#FFFFCC; " valign="top">
<div id="output" style="max-height:400px; overflow-y:auto"></div>
</td></tr>
</table>
</div>

                <script src="/includes/nav.js" language="JavaScript" type="text/javascript" /></script>
                <noscript>
                     <style>div.collapseblock { display:inline} </style>
                </noscript>
            
            <html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" encoding="iso-8859-1">
            <!-- Copyright (c) 2006-2021, The MITRE Corporation. CWE and the CWE logo are trademarks of The MITRE Corporation. -->            <a xmlns:xhtml="http://www.w3.org/1999/xhtml" name="754"></a><div style="overflow:auto;"><h2 style="display:inline; margin:0px 0px 2px 0px; vertical-align: text-bottom">CWE-754: Improper Check for Unusual or Exceptional Conditions</h2><div style="text-align:right; margin:5px 0px 0px 5px; padding-bottom:1px; white-space:nowrap;"></div></div><div xmlns:xhtml="http://www.w3.org/1999/xhtml" id="CWEDefinition" class="Weakness"><div class="title"><div class="status"><table cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td valign="top" align="left" width="33%" nowrap><div style="font-weight:bold">Weakness ID: 754</div><span style="font-size:80%"> Abstraction: <span style="font-weight:normal">Class</span><br>Structure: <span style="font-weight:normal">Simple</span></span></td><td valign="top" align="right" nowrap><div style="font-size:80%;"><b>Status: </b><span class="Incomplete"><span style="font-weight:normal">Incomplete</span></span></div></td></tr></table></div></div>
							<div id="Filter_Menu" style="padding-bottom:10px;">
							<div style="font-size:75%; color:#000066; font-style:italic; display:inline">Presentation Filter: </div>
    <select id="SkinSelector" onchange="skinSelector();">
    <option value="basic_summary">Basic</option>
    <option value="complete" selected>Complete</option>
    <option value="high_level">High Level</option>
    <option value="mapping_friendly">Mapping-Friendly</option>
    </select> 

							</div>
						<div id="Description"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Description');"><img id="ocimg_754_Description" src="/images/head_more.gif" border="0" alt="+"></a> </span>Description</div><div name="oc_754_Description" id="oc_754_Description" class="expandblock"><div class="detail"><div class="indent">The software does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the software. </div></div></div></div><div id="Extended_Description"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Extended_Description');"><img id="ocimg_754_Extended_Description" src="/images/head_more.gif" border="0" alt="+"></a> </span>Extended Description</div><div name="oc_754_Extended_Description" id="oc_754_Extended_Description" class="expandblock"><div class="detail"><div class="indent"><p>The programmer may assume that certain events or conditions will never occur or do not need to be worried about, such as low memory conditions, lack of access to resources due to restrictive permissions, or misbehaving clients or components. However, attackers may intentionally trigger these unusual conditions, thus violating the programmer's assumptions, possibly introducing instability, incorrect behavior, or a vulnerability. </p><p>Note that this entry is not exclusively about the use of exceptions and exception handling, which are mechanisms for both checking and handling unusual or unexpected conditions. </p></div></div></div></div><div id="Relationships"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Relationships');"><img id="ocimg_754_Relationships" src="/images/head_more.gif" border="0" alt="+"></a> </span>Relationships</div><div name="oc_754_Relationships" id="oc_754_Relationships" class="expandblock"><div class="detail"><div class="indent"><span class="section tool"><img src="/images/dictionary.gif" alt="Section Help"><span class="tip">This table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.</span></span><div id="relevant_table"><div class="reltable"><span id="script"><a href="javascript:toggleblocksOC('754_1000_relevant_table');"><img id="ocimg_754_1000_relevant_table" src="/images/head_more.gif" border="0" alt="+"></a> </span>Relevant to the view "Research Concepts" (CWE-1000)<div name="oc_754_1000_relevant_table" id="oc_754_1000_relevant_table" class="expandblock"><div class="tabledetail"><div class="indent"><div xmlns:saxon="http://saxon.sf.net/" xmlns:xalan="http://xml.apache.org/xalan" class="tabledetail"><table width="98%" cellpadding="0" cellspacing="0" border="0" id="Detail"><tr><th valign="top" width="110px">Nature</th><th valign="top" width="40px">Type</th><th valign="top" width="50px">ID</th><th valign="top">Name</th></tr><tbody><tr class="primary Weakness"><td valign="top">ChildOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/pillar.gif" alt="Pillar" class="icon"><span class="tip">Pillar - a weakness that is the most abstract type of weakness and represents a theme for all class/base/variant weaknesses related to it. A Pillar is different from a Category as a Pillar is still technically a type of weakness that describes a mistake, while a Category represents a common characteristic used to group related things.</span></span></td><td valign="top">703</td><td valign="top"><a href="/data/definitions/703.html" target="_blank" rel="noopener noreferrer">Improper Check or Handling of Exceptional Conditions</a></td></tr><tr class="primary Weakness"><td valign="top">ParentOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/base.gif" alt="Base" class="icon"><span class="tip">Base - a weakness 
that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.</span></span></td><td valign="top">252</td><td valign="top"><a href="/data/definitions/252.html" target="_blank" rel="noopener noreferrer">Unchecked Return Value</a></td></tr><tr class="primary Weakness"><td valign="top">ParentOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/base.gif" alt="Base" class="icon"><span class="tip">Base - a weakness 
that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.</span></span></td><td valign="top">253</td><td valign="top"><a href="/data/definitions/253.html" target="_blank" rel="noopener noreferrer">Incorrect Check of Function Return Value</a></td></tr><tr class="primary Weakness"><td valign="top">ParentOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/base.gif" alt="Base" class="icon"><span class="tip">Base - a weakness 
that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.</span></span></td><td valign="top">273</td><td valign="top"><a href="/data/definitions/273.html" target="_blank" rel="noopener noreferrer">Improper Check for Dropped Privileges</a></td></tr><tr class="primary Weakness"><td valign="top">ParentOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/base.gif" alt="Base" class="icon"><span class="tip">Base - a weakness 
that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.</span></span></td><td valign="top">354</td><td valign="top"><a href="/data/definitions/354.html" target="_blank" rel="noopener noreferrer">Improper Validation of Integrity Check Value</a></td></tr><tr class="primary Weakness"><td valign="top">ParentOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/base.gif" alt="Base" class="icon"><span class="tip">Base - a weakness 
that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.</span></span></td><td valign="top">391</td><td valign="top"><a href="/data/definitions/391.html" target="_blank" rel="noopener noreferrer">Unchecked Error Condition</a></td></tr><tr class="primary Weakness"><td valign="top">ParentOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/base.gif" alt="Base" class="icon"><span class="tip">Base - a weakness 
that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.</span></span></td><td valign="top">394</td><td valign="top"><a href="/data/definitions/394.html" target="_blank" rel="noopener noreferrer">Unexpected Status Code or Return Value</a></td></tr><tr class="primary Weakness"><td valign="top">ParentOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/base.gif" alt="Base" class="icon"><span class="tip">Base - a weakness 
that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.</span></span></td><td valign="top">476</td><td valign="top"><a href="/data/definitions/476.html" target="_blank" rel="noopener noreferrer">NULL Pointer Dereference</a></td></tr></tbody></table></div></div></div></div></div></div><span class="section tool"><img src="/images/dictionary.gif" alt="Section Help"><span class="tip">This table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.</span></span><div id="relevant_table"><div class="reltable"><span id="script"><a href="javascript:toggleblocksOC('754_1003_relevant_table');"><img id="ocimg_754_1003_relevant_table" src="/images/head_less.gif" border="0" alt="+"></a> </span>Relevant to the view "Weaknesses for Simplified Mapping of Published Vulnerabilities" (CWE-1003)<div name="oc_754_1003_relevant_table" id="oc_754_1003_relevant_table" class="collapseblock"><div class="tabledetail"><div class="indent"><div xmlns:saxon="http://saxon.sf.net/" xmlns:xalan="http://xml.apache.org/xalan" class="tabledetail"><table width="98%" cellpadding="0" cellspacing="0" border="0" id="Detail"><tr><th valign="top" width="110px">Nature</th><th valign="top" width="40px">Type</th><th valign="top" width="50px">ID</th><th valign="top">Name</th></tr><tbody><tr class="primary Weakness"><td valign="top">ParentOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/base.gif" alt="Base" class="icon"><span class="tip">Base - a weakness 
that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.</span></span></td><td valign="top">252</td><td valign="top"><a href="/data/definitions/252.html" target="_blank" rel="noopener noreferrer">Unchecked Return Value</a></td></tr><tr class="primary Weakness"><td valign="top">ParentOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/base.gif" alt="Base" class="icon"><span class="tip">Base - a weakness 
that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.</span></span></td><td valign="top">273</td><td valign="top"><a href="/data/definitions/273.html" target="_blank" rel="noopener noreferrer">Improper Check for Dropped Privileges</a></td></tr><tr class="primary Weakness"><td valign="top">ParentOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/base.gif" alt="Base" class="icon"><span class="tip">Base - a weakness 
that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.</span></span></td><td valign="top">476</td><td valign="top"><a href="/data/definitions/476.html" target="_blank" rel="noopener noreferrer">NULL Pointer Dereference</a></td></tr></tbody></table></div></div></div></div></div></div><span class="section tool"><img src="/images/dictionary.gif" alt="Section Help"><span class="tip">This table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.</span></span><div id="relevant_table"><div class="reltable"><span id="script"><a href="javascript:toggleblocksOC('754_1008_relevant_table');"><img id="ocimg_754_1008_relevant_table" src="/images/head_less.gif" border="0" alt="+"></a> </span>Relevant to the view "Architectural Concepts" (CWE-1008)<div name="oc_754_1008_relevant_table" id="oc_754_1008_relevant_table" class="collapseblock"><div class="tabledetail"><div class="indent"><div xmlns:saxon="http://saxon.sf.net/" xmlns:xalan="http://xml.apache.org/xalan" class="tabledetail"><table width="98%" cellpadding="0" cellspacing="0" border="0" id="Detail"><tr><th valign="top" width="110px">Nature</th><th valign="top" width="40px">Type</th><th valign="top" width="50px">ID</th><th valign="top">Name</th></tr><tbody><tr class="primary Category"><td valign="top">MemberOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/category.gif" alt="Category" class="icon"><span class="tip">Category - a CWE entry that contains a set of other entries that share a common characteristic.</span></span></td><td valign="top">1012</td><td valign="top"><a href="/data/definitions/1012.html" target="_blank" rel="noopener noreferrer">Cross Cutting</a></td></tr></tbody></table></div></div></div></div></div></div></div></div></div></div><div id="Background_Details"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Background_Details');"><img id="ocimg_754_Background_Details" src="/images/head_more.gif" border="0" alt="+"></a> </span>Background Details</div><div name="oc_754_Background_Details" id="oc_754_Background_Details" class="expandblock"><div class="detail"><div class="indent"><div id="Grouped"><table width="98%" cellpadding="0" cellspacing="0" border="0" class="Detail">
            Many functions will return some value about the success of their actions. This will alert the program whether or not to handle any errors caused by that function.
         </table></div></div></div></div></div><div id="Modes_Of_Introduction"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Modes_Of_Introduction');"><img id="ocimg_754_Modes_Of_Introduction" src="/images/head_more.gif" border="0" alt="+"></a> </span>Modes Of Introduction</div><div name="oc_754_Modes_Of_Introduction" id="oc_754_Modes_Of_Introduction" class="expandblock"><div class="tabledetail"><div class="indent"><span class="section tool"><img src="/images/dictionary.gif" alt="Section Help"><span class="tip">The different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur, while the Note provides a typical scenario related to introduction during the given phase.</span></span><table width="98%" cellpadding="0" cellspacing="0" border="0" id="Detail"><tr><th valign="middle" width="110px">Phase</th><th valign="middle">Note</th></tr><tr><td valign="middle" nowrap>Implementation</td><td valign="middle" width="100%">REALIZATION: This weakness is caused during implementation of an architectural security tactic. </td></tr></table></div></div></div></div><div id="Applicable_Platforms"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Applicable_Platforms');"><img id="ocimg_754_Applicable_Platforms" src="/images/head_more.gif" border="0" alt="+"></a> </span>Applicable Platforms</div><div name="oc_754_Applicable_Platforms" id="oc_754_Applicable_Platforms" class="expandblock"><div class="detail"><div class="indent"><span class="section tool"><img src="/images/dictionary.gif" alt="Section Help"><span class="tip">This listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.</span></span><p class="subheading">Languages</p><div class="indent"><p> Class: Language-Independent <span class="smaller" style="font-style:italic">(Undetermined Prevalence)</span></p></div></div></div></div></div><div id="Common_Consequences"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Common_Consequences');"><img id="ocimg_754_Common_Consequences" src="/images/head_more.gif" border="0" alt="+"></a> </span>Common Consequences</div><div name="oc_754_Common_Consequences" id="oc_754_Common_Consequences" class="expandblock"><div class="tabledetail"><div class="indent"><span class="section tool"><img src="/images/dictionary.gif" alt="Section Help"><span class="tip">This table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited to achieve a different impact.</span></span><table width="98%" cellpadding="0" cellspacing="0" border="0" id="Detail"><tr><th valign="middle" width="135px" nowrap>Scope</th><th valign="middle">Impact</th><th valign="middle" width="100px" nowrap>Likelihood</th></tr><tr><td valign="middle" nowrap>Integrity<br>Availability<br></td><td valign="middle" width="100%"><div style="padding-top:5px"><p class="smaller" style="font-weight:normal"><span class="subheading">Technical Impact:</span><i> DoS: Crash, Exit, or Restart; Unexpected State</i></p></div><div style="padding-top:5px">The data which were produced as a result of a function call could be in a bad state upon return. If the return value is not checked, then this bad data may be used in operations, possibly leading to a crash or other unintended behaviors. </div></td><td valign="middle" nowrap></td></tr></table></div></div></div></div><div id="Likelihood_Of_Exploit"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Likelihood_Of_Exploit');"><img id="ocimg_754_Likelihood_Of_Exploit" src="/images/head_more.gif" border="0" alt="+"></a> </span>Likelihood Of Exploit</div><div name="oc_754_Likelihood_Of_Exploit" id="oc_754_Likelihood_Of_Exploit" class="expandblock"><div class="detail"><div class="indent">Medium</div></div></div></div><div id="Demonstrative_Examples"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Demonstrative_Examples');"><img id="ocimg_754_Demonstrative_Examples" src="/images/head_more.gif" border="0" alt="+"></a> </span>Demonstrative Examples</div><div name="oc_754_Demonstrative_Examples" id="oc_754_Demonstrative_Examples" class="expandblock"><div class="detail"><div class="indent"><p class="subheading">Example 1</p><p>Consider the following code segment:</p><div class="indent bad"><div id="ExampleCode" style="clear:both; padding-top:5px; padding-bottom:5px;"><div class="shadow"><div class="CodeHead"><div style="float:right; font-style:italic; font-size:10px; color:#98A9B7">(bad code)</div><div class="optheading smaller"><span style="font-weight:normal; font-style:italic">Example Language: </span>C&nbsp;</div></div><div class="top">
                  <div>char buf[10], cp_buf[10];<br>fgets(buf, 10, stdin);<br>strcpy(cp_buf, buf);</div>
               </div></div></div></div><p>The programmer expects that when fgets() returns, buf will contain a null-terminated string of length 9 or less. But if an I/O error occurs, fgets() will not null-terminate buf. Furthermore, if the end of the file is reached before any characters are read, fgets() returns without writing anything to buf. In both of these situations, fgets() signals that something unusual has happened by returning NULL, but in this code, the warning will not be noticed. The lack of a null terminator in buf can result in a buffer overflow in the subsequent call to strcpy().</p><p class="subheading">Example 2</p><p>The following code does not check to see if memory allocation succeeded before attempting to use the pointer returned by malloc().</p><div class="indent bad"><div id="ExampleCode" style="clear:both; padding-top:5px; padding-bottom:5px;"><div class="shadow"><div class="CodeHead"><div style="float:right; font-style:italic; font-size:10px; color:#98A9B7">(bad code)</div><div class="optheading smaller"><span style="font-weight:normal; font-style:italic">Example Language: </span>C&nbsp;</div></div><div class="top">
                  <div>buf = (char*) malloc(req_size);<br>strncpy(buf, xfer, req_size);</div>
               </div></div></div></div><p>The traditional defense of this coding error is: "If my program runs out of memory, it will fail. It doesn't matter whether I handle the error or simply allow the program to die with a segmentation fault when it tries to dereference the null pointer." This argument ignores three important considerations:</p><p>
                  <ul>
                     <li>
                        <div>Depending upon the type and size of the application, it may be possible to free memory that is being used elsewhere so that execution can continue.</div>
                     </li>
                     <li>
                        <div>It is impossible for the program to perform a graceful exit if required. If the program is performing an atomic operation, it can leave the system in an inconsistent state.</div>
                     </li>
                     <li>
                        <div>The programmer has lost the opportunity to record diagnostic information. Did the call to malloc() fail because req_size was too large or because there were too many requests being handled at the same time? Or was it caused by a memory leak that has built up over time? Without handling the error, there is no way to know.</div>
                     </li>
                  </ul>
               </p><p class="subheading">Example 3</p><p>The following examples read a file into a byte array.</p><div class="indent bad"><div id="ExampleCode" style="clear:both; padding-top:5px; padding-bottom:5px;"><div class="shadow"><div class="CodeHead"><div style="float:right; font-style:italic; font-size:10px; color:#98A9B7">(bad code)</div><div class="optheading smaller"><span style="font-weight:normal; font-style:italic">Example Language: </span>C#&nbsp;</div></div><div class="top">
                  <div>char[] byteArray = new char[1024];<br>for (IEnumerator i=users.GetEnumerator(); i.MoveNext() ;i.Current()) {<div style="margin-left:10px;">String userName = (String) i.Current();<br>String pFileName = PFILE_ROOT + "/" + userName;<br>StreamReader sr = new StreamReader(pFileName);<br>sr.Read(byteArray,0,1024);//the file is always 1k bytes<br>sr.Close();<br>processPFile(userName, byteArray);</div>}</div>
               </div></div></div></div><div class="indent bad"><div id="ExampleCode" style="clear:both; padding-top:5px; padding-bottom:5px;"><div class="shadow"><div class="CodeHead"><div style="float:right; font-style:italic; font-size:10px; color:#98A9B7">(bad code)</div><div class="optheading smaller"><span style="font-weight:normal; font-style:italic">Example Language: </span>Java&nbsp;</div></div><div class="top">
                  <div>FileInputStream fis;<br>byte[] byteArray = new byte[1024];<br>for (Iterator i=users.iterator(); i.hasNext();) {<div style="margin-left:10px;">
                        <div>String userName = (String) i.next();<br>String pFileName = PFILE_ROOT + "/" + userName;<br>FileInputStream fis = new FileInputStream(pFileName);<br>fis.read(byteArray); // the file is always 1k bytes<br>fis.close();<br>processPFile(userName, byteArray);<br>
                        </div>
                     </div>
                  </div>
               </div></div></div></div><p>The code loops through a set of users, reading a private data file for each user. The programmer assumes that the files are always 1 kilobyte in size and therefore ignores the return value from Read(). If an attacker can create a smaller file, the program will recycle the remainder of the data from the previous user and treat it as though it belongs to the attacker.</p><p class="subheading">Example 4</p><p>The following code does not check to see if the string returned by getParameter() is null before calling the member function compareTo(), potentially causing a NULL dereference.</p><div class="indent bad"><div id="ExampleCode" style="clear:both; padding-top:5px; padding-bottom:5px;"><div class="shadow"><div class="CodeHead"><div style="float:right; font-style:italic; font-size:10px; color:#98A9B7">(bad code)</div><div class="optheading smaller"><span style="font-weight:normal; font-style:italic">Example Language: </span>Java&nbsp;</div></div><div class="top">
                  <div>String itemName = request.getParameter(ITEM_NAME);<br>if (itemName.compareTo(IMPORTANT_ITEM) == 0) {<div style="margin-left:10px;">...</div>}<br>...</div>
               </div></div></div></div><p>The following code does not check to see if the string returned by the Item property is null before calling the member function Equals(), potentially causing a NULL dereference.</p><div class="indent bad"><div id="ExampleCode" style="clear:both; padding-top:5px; padding-bottom:5px;"><div class="shadow"><div class="CodeHead"><div style="float:right; font-style:italic; font-size:10px; color:#98A9B7">(bad code)</div><div class="optheading smaller"><span style="font-weight:normal; font-style:italic">Example Language: </span>Java&nbsp;</div></div><div class="top">
                  <div>String itemName = request.Item(ITEM_NAME);<br>if (itemName.Equals(IMPORTANT_ITEM)) {<div style="margin-left:10px;">...</div>}<br>...</div>
               </div></div></div></div><p>The traditional defense of this coding error is: "I know the requested value will always exist because.... If it does not exist, the program cannot perform the desired behavior so it doesn't matter whether I handle the error or simply allow the program to die dereferencing a null value." But attackers are skilled at finding unexpected paths through programs, particularly when exceptions are involved.</p><p class="subheading">Example 5</p><p>The following code shows a system property that is set to null and later dereferenced by a programmer who mistakenly assumes it will always be defined.</p><div class="indent bad"><div id="ExampleCode" style="clear:both; padding-top:5px; padding-bottom:5px;"><div class="shadow"><div class="CodeHead"><div style="float:right; font-style:italic; font-size:10px; color:#98A9B7">(bad code)</div><div class="optheading smaller"><span style="font-weight:normal; font-style:italic">Example Language: </span>Java&nbsp;</div></div><div class="top">
                  <div>System.clearProperty("os.name");<br>...<br>String os = System.getProperty("os.name");<br>if (os.equalsIgnoreCase("Windows 95")) System.out.println("Not supported");</div>
               </div></div></div></div><p>The traditional defense of this coding error is: "I know the requested value will always exist because.... If it does not exist, the program cannot perform the desired behavior so it doesn't matter whether I handle the error or simply allow the program to die dereferencing a null value." But attackers are skilled at finding unexpected paths through programs, particularly when exceptions are involved.</p><p class="subheading">Example 6</p><p>The following VB.NET code does not check to make sure that it has read 50 bytes from myfile.txt. This can cause DoDangerousOperation() to operate on an unexpected value.</p><div class="indent bad"><div id="ExampleCode" style="clear:both; padding-top:5px; padding-bottom:5px;"><div class="shadow"><div class="CodeHead"><div style="float:right; font-style:italic; font-size:10px; color:#98A9B7">(bad code)</div><div class="optheading smaller"><span style="font-weight:normal; font-style:italic">Example Language: </span>C#&nbsp;</div></div><div class="top">
                  <div>Dim MyFile As New FileStream("myfile.txt", FileMode.Open, FileAccess.Read, FileShare.Read)<br>Dim MyArray(50) As Byte<br>MyFile.Read(MyArray, 0, 50)<br>DoDangerousOperation(MyArray(20))</div>
               </div></div></div></div><p>In .NET, it is not uncommon for programmers to misunderstand Read() and related methods that are part of many System.IO classes. The stream and reader classes do not consider it to be unusual or exceptional if only a small amount of data becomes available. These classes simply add the small amount of data to the return buffer, and set the return value to the number of bytes or characters read. There is no guarantee that the amount of data returned is equal to the amount of data requested.</p><p class="subheading">Example 7</p><p>This example takes an IP address from a user, verifies that it is well formed and then looks up the hostname and copies it into a buffer.</p><div class="indent bad"><div id="ExampleCode" style="clear:both; padding-top:5px; padding-bottom:5px;"><div class="shadow"><div class="CodeHead"><div style="float:right; font-style:italic; font-size:10px; color:#98A9B7">(bad code)</div><div class="optheading smaller"><span style="font-weight:normal; font-style:italic">Example Language: </span>C&nbsp;</div></div><div class="top">
                  <div>void host_lookup(char *user_supplied_addr){<div style="margin-left:10px;">
                        <div>struct hostent *hp;<br>in_addr_t *addr;<br>char hostname[64];<br>in_addr_t inet_addr(const char *cp);<br>
                           <br>
                           <i>/*routine that ensures user_supplied_addr is in the right format for conversion */</i>
                           <br>
                           <br>validate_addr_form(user_supplied_addr);<br>addr = inet_addr(user_supplied_addr);<br>hp = gethostbyaddr( addr, sizeof(struct in_addr), AF_INET);<br>strcpy(hostname, hp-&gt;h_name);</div>
                     </div>}</div>
               </div></div></div></div><p>If an attacker provides an address that appears to be well-formed, but the address does not resolve to a hostname, then the call to gethostbyaddr() will return NULL. Since the code does not check the return value from gethostbyaddr (<a href="/data/definitions/252.html">CWE-252</a>), a NULL pointer dereference (<a href="/data/definitions/476.html">CWE-476</a>) would then occur in the call to strcpy(). </p><p>Note that this code is also vulnerable to a buffer overflow (<a href="/data/definitions/119.html">CWE-119</a>). </p><p class="subheading">Example 8</p><p>In the following C/C++ example the method outputStringToFile opens a file in the local filesystem and outputs a string to the file. The input parameters output and filename contain the string to output to the file and the name of the file respectively.</p><div class="indent bad"><div id="ExampleCode" style="clear:both; padding-top:5px; padding-bottom:5px;"><div class="shadow"><div class="CodeHead"><div style="float:right; font-style:italic; font-size:10px; color:#98A9B7">(bad code)</div><div class="optheading smaller"><span style="font-weight:normal; font-style:italic">Example Language: </span>C++&nbsp;</div></div><div class="top">
                  <div>int outputStringToFile(char *output, char *filename) {<div style="margin-left:10px;">
                        <div>
                           <br>openFileToWrite(filename);<br>writeToFile(output);<br>closeFile(filename);</div>
                     </div>}</div>
               </div></div></div></div><p>However, this code does not check the return values of the methods openFileToWrite, writeToFile, closeFile to verify that the file was properly opened and closed and that the string was successfully written to the file. The return values for these methods should be checked to determine if the method was successful and allow for detection of errors or unexpected conditions as in the following example.</p><div class="indent good"><div id="ExampleCode" style="clear:both; padding-top:5px; padding-bottom:5px;"><div class="shadow"><div class="CodeHead"><div style="float:right; font-style:italic; font-size:10px; color:#98A9B7">(good code)</div><div class="optheading smaller"><span style="font-weight:normal; font-style:italic">Example Language: </span>C++&nbsp;</div></div><div class="top">
                  <div>int outputStringToFile(char *output, char *filename) {<div style="margin-left:10px;">
                        <div>int isOutput = SUCCESS;<br>
                           <br>int isOpen = openFileToWrite(filename);<br>if (isOpen == FAIL) {<div style="margin-left:10px;">printf("Unable to open file %s", filename);<br>isOutput = FAIL;</div>}<br>else {<div style="margin-left:10px;">
                              <div>int isWrite = writeToFile(output);<br>if (isWrite == FAIL) {<div style="margin-left:10px;">printf("Unable to write to file %s", filename);<br>isOutput = FAIL;</div>}<br>
                                 <br>int isClose = closeFile(filename);<br>if (isClose == FAIL)<div style="margin-left:10px;">isOutput = FAIL;</div>
                              </div>
                           </div>}<br>return isOutput;</div>
                     </div>}</div>
               </div></div></div></div><p class="subheading">Example 9</p><p>In the following Java example the method readFromFile uses a FileReader object to read the contents of a file. The FileReader object is created using the File object readFile, the readFile object is initialized using the setInputFile method. The setInputFile method should be called before calling the readFromFile method.</p><div class="indent bad"><div id="ExampleCode" style="clear:both; padding-top:5px; padding-bottom:5px;"><div class="shadow"><div class="CodeHead"><div style="float:right; font-style:italic; font-size:10px; color:#98A9B7">(bad code)</div><div class="optheading smaller"><span style="font-weight:normal; font-style:italic">Example Language: </span>Java&nbsp;</div></div><div class="top">
                  <div>private File readFile = null;<br>
                     <br>public void setInputFile(String inputFile) {<div style="margin-left:10px;">
                        <div>
                           <br>
                           <i>// create readFile File object from string containing name of file</i>
                           <br>
                        </div>
                     </div>}<br>
                     <br>public void readFromFile() {<div style="margin-left:10px;">
                        <div>try {<div style="margin-left:10px;">
                              <div>reader = new FileReader(readFile);<br>
                                 <br>
                                 <i>// read input file</i>
                                 <br>
                              </div>
                           </div>} catch (FileNotFoundException ex) {...}</div>
                     </div>}</div>
               </div></div></div></div><p>However, the readFromFile method does not check to see if the readFile object is null, i.e. has not been initialized, before creating the FileReader object and reading from the input file. The readFromFile method should verify whether the readFile object is null and output an error message and raise an exception if the readFile object is null, as in the following code.</p><div class="indent good"><div id="ExampleCode" style="clear:both; padding-top:5px; padding-bottom:5px;"><div class="shadow"><div class="CodeHead"><div style="float:right; font-style:italic; font-size:10px; color:#98A9B7">(good code)</div><div class="optheading smaller"><span style="font-weight:normal; font-style:italic">Example Language: </span>Java&nbsp;</div></div><div class="top">
                  <div>private File readFile = null;<br>
                     <br>public void setInputFile(String inputFile) {<div style="margin-left:10px;">
                        <div>
                           <br>
                           <i>// create readFile File object from string containing name of file</i>
                           <br>
                        </div>
                     </div>}<br>
                     <br>public void readFromFile() {<div style="margin-left:10px;">
                        <div>try {<div style="margin-left:10px;">
                              <div>if (readFile == null) {<div style="margin-left:10px;">System.err.println("Input file has not been set, call setInputFile method before calling openInputFile");<br>throw NullPointerException;</div>}<br>
                                 <br>reader = new FileReader(readFile);<br>
                                 <br>
                                 <i>// read input file</i>
                                 <br>
                              </div>
                           </div>} catch (FileNotFoundException ex) {...}<br>catch (NullPointerException ex) {...}</div>
                     </div>}</div>
               </div></div></div></div></div></div></div></div><div id="Observed_Examples"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Observed_Examples');"><img id="ocimg_754_Observed_Examples" src="/images/head_more.gif" border="0" alt="+"></a> </span>Observed Examples</div><div name="oc_754_Observed_Examples" id="oc_754_Observed_Examples" class="expandblock"><div class="tabledetail"><div class="indent"><div style="margin-top: 10px"><table width="98%" cellpadding="0" cellspacing="0" border="0" class="Detail"><tr><th valign="top" width="165px" nowrap>Reference</th><th valign="top">Description</th></tr>
            <tr><td valign="top"><div><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-3798" target="_blank" rel="noopener noreferrer">CVE-2007-3798</a></div></td><td valign="top"><div class="indent">Unchecked return value leads to resultant integer overflow and code execution. </div></td></tr>
            <tr><td valign="top"><div><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4447" target="_blank" rel="noopener noreferrer">CVE-2006-4447</a></div></td><td valign="top"><div class="indent">Program does not check return value when invoking functions to drop privileges, which could leave users with higher privileges than expected by forcing those functions to fail. </div></td></tr>
            <tr><td valign="top"><div><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-2916" target="_blank" rel="noopener noreferrer">CVE-2006-2916</a></div></td><td valign="top"><div class="indent">Program does not check return value when invoking functions to drop privileges, which could leave users with higher privileges than expected by forcing those functions to fail. </div></td></tr>
         </table></div></div></div></div></div><div id="Potential_Mitigations"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Potential_Mitigations');"><img id="ocimg_754_Potential_Mitigations" src="/images/head_more.gif" border="0" alt="+"></a> </span>Potential Mitigations</div><div name="oc_754_Potential_Mitigations" id="oc_754_Potential_Mitigations" class="expandblock"><div class="detail"><div class="indent"><div id="Grouped"><table width="98%" cellpadding="0" cellspacing="0" border="0" class="Detail">
            <tr><td valign="top"><p class="subheading">Phase:  Requirements</p><div class="indent"><p class="suboptheading">Strategy:  Language Selection</p></div><div class="indent"> </div><p><div class="indent">Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. </div></p><div class="indent"> </div><p><div class="indent">Choose languages with features such as exception handling that force the programmer to anticipate unusual conditions that may generate exceptions. Custom exceptions may need to be developed to handle unusual business-logic conditions. Be careful not to pass sensitive exceptions back to the user (<a href="/data/definitions/209.html">CWE-209</a>, <a href="/data/definitions/248.html">CWE-248</a>). </div></p><div class="indent"> </div></td></tr>
            <tr><td valign="top"><p class="subheading">Phase:  Implementation</p><div class="indent">Check the results of all functions that return a value and verify that the value is expected. </div><div class="indent"><p class="suboptheading">Effectiveness: High</p></div><div class="indent"><b><span class="smaller">Note: </span></b>Checking the return value of the function will typically be sufficient, however beware of race conditions (<a href="/data/definitions/362.html">CWE-362</a>) in a concurrent environment. </div></td></tr>
            <tr><td valign="top"><p class="subheading">Phase:  Implementation</p><div class="indent">If using exception handling, catch and throw specific exceptions instead of overly-general exceptions (<a href="/data/definitions/396.html">CWE-396</a>, <a href="/data/definitions/397.html">CWE-397</a>). Catch and handle exceptions as locally as possible so that exceptions do not propagate too far up the call stack (<a href="/data/definitions/705.html">CWE-705</a>). Avoid unchecked or uncaught exceptions where feasible (<a href="/data/definitions/248.html">CWE-248</a>). </div><div class="indent"><p class="suboptheading">Effectiveness: High</p></div><div class="indent"><b><span class="smaller">Note: </span></b>Using specific exceptions, and ensuring that exceptions are checked, helps programmers to anticipate and appropriately handle many unusual events that could occur.</div></td></tr>
            <tr><td valign="top"><p class="subheading">Phase:  Implementation</p><div class="indent"> </div><p><div class="indent">Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can confuse users) or being too detailed (which may reveal more than intended). The messages should not reveal the methods that were used to determine the error. Attackers can use detailed information to refine or optimize their original attack, thereby increasing their chances of success. </div></p><div class="indent"> </div><p><div class="indent">If errors must be captured in some detail, record them in log messages, but consider what could occur if the log messages can be viewed by attackers. Highly sensitive information such as passwords should never be saved to log files. </div></p><div class="indent"> </div><p><div class="indent">Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a user account exists or not. </div></p><div class="indent"> </div><p><div class="indent">Exposing additional information to a potential attacker in the context of an exceptional condition can help the attacker determine what attack vectors are most likely to succeed beyond DoS. </div></p><div class="indent"> </div></td></tr>
            <tr><td valign="top"><p class="subheading">Phase:  Implementation</p><div class="indent"><p class="suboptheading">Strategy:  Input Validation</p></div><div class="indent"> </div><p><div class="indent">Assume all input is malicious. Use an "accept known good" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. </div></p><div class="indent"> </div><p><div class="indent">When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, "boat" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as "red" or "blue." </div></p><div class="indent"> </div><p><div class="indent">Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright. </div></p><div class="indent"> </div><div class="indent"><b><span class="smaller">Note: </span></b>Performing extensive input validation does not help with handling unusual conditions, but it will minimize their occurrences and will make it more difficult for attackers to trigger them.</div></td></tr>
            <tr><td valign="top"><p class="subheading">Phases:  Architecture and Design; Implementation</p><div class="indent">If the program must fail, ensure that it fails gracefully (fails closed). There may be a temptation to simply let the program fail poorly in cases such as low memory conditions, but an attacker may be able to assert control before the software has fully exited. Alternately, an uncontrolled failure could cause cascading problems with other downstream components; for example, the program could send a signal to a downstream process so the process immediately knows that a problem has occurred and has a better chance of recovery. </div></td></tr>
            <tr><td valign="top"><p class="subheading">Phase:  Architecture and Design</p><div class="indent">Use system limits, which should help to prevent resource exhaustion. However, the software should still handle low resource conditions since they may still occur. </div></td></tr>
         </table></div></div></div></div></div><div id="Detection_Methods"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Detection_Methods');"><img id="ocimg_754_Detection_Methods" src="/images/head_more.gif" border="0" alt="+"></a> </span>Detection Methods</div><div name="oc_754_Detection_Methods" id="oc_754_Detection_Methods" class="expandblock"><div class="detail"><div class="indent"><div id="Grouped"><table width="98%" cellpadding="0" cellspacing="0" border="0" class="Detail">
            <tr><td valign="top"><p class="subheading"> Automated Static Analysis</p><div class="indent">Automated static analysis may be useful for detecting unusual conditions involving system resources or common programming idioms, but not for violations of business rules. </div><div class="indent"><p class="suboptheading">Effectiveness: Moderate</p></div></td></tr>
            <tr><td valign="top"><p class="subheading"> Manual Dynamic Analysis</p><div class="indent">Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself. </div></td></tr>
         </table></div></div></div></div></div><div id="Memberships"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Memberships');"><img id="ocimg_754_Memberships" src="/images/head_more.gif" border="0" alt="+"></a> </span>Memberships</div><div name="oc_754_Memberships" id="oc_754_Memberships" class="expandblock"><div class="detail"><div class="indent"><span class="section tool"><img src="/images/dictionary.gif" alt="Section Help"><span class="tip">This MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness fits within the context of external information sources.</span></span><div xmlns:saxon="http://saxon.sf.net/" xmlns:xalan="http://xml.apache.org/xalan" class="tabledetail" style="padding-top:10px"><table width="98%" cellpadding="0" cellspacing="0" border="0" id="Detail"><tr><th valign="top" width="110px">Nature</th><th valign="top" width="40px">Type</th><th valign="top" width="50px">ID</th><th valign="top">Name</th></tr><tbody><tr class="primary Category"><td valign="top">MemberOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/category.gif" alt="Category" class="icon"><span class="tip">Category - a CWE entry that contains a set of other entries that share a common characteristic.</span></span></td><td valign="top">742</td><td valign="top"><a href="/data/definitions/742.html" target="_blank" rel="noopener noreferrer">CERT C Secure Coding Standard (2008) Chapter 9 - Memory Management (MEM)</a></td></tr><tr class="primary Category"><td valign="top">MemberOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/category.gif" alt="Category" class="icon"><span class="tip">Category - a CWE entry that contains a set of other entries that share a common characteristic.</span></span></td><td valign="top">802</td><td valign="top"><a href="/data/definitions/802.html" target="_blank" rel="noopener noreferrer">2010 Top 25 - Risky Resource Management</a></td></tr><tr class="primary Category"><td valign="top">MemberOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/category.gif" alt="Category" class="icon"><span class="tip">Category - a CWE entry that contains a set of other entries that share a common characteristic.</span></span></td><td valign="top">867</td><td valign="top"><a href="/data/definitions/867.html" target="_blank" rel="noopener noreferrer">2011 Top 25 - Weaknesses On the Cusp</a></td></tr><tr class="primary Category"><td valign="top">MemberOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/category.gif" alt="Category" class="icon"><span class="tip">Category - a CWE entry that contains a set of other entries that share a common characteristic.</span></span></td><td valign="top">876</td><td valign="top"><a href="/data/definitions/876.html" target="_blank" rel="noopener noreferrer">CERT C++ Secure Coding Section 08 - Memory Management (MEM)</a></td></tr><tr class="primary Category"><td valign="top">MemberOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/category.gif" alt="Category" class="icon"><span class="tip">Category - a CWE entry that contains a set of other entries that share a common characteristic.</span></span></td><td valign="top">880</td><td valign="top"><a href="/data/definitions/880.html" target="_blank" rel="noopener noreferrer">CERT C++ Secure Coding Section 12 - Exceptions and Error Handling (ERR)</a></td></tr><tr class="primary Category"><td valign="top">MemberOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/category.gif" alt="Category" class="icon"><span class="tip">Category - a CWE entry that contains a set of other entries that share a common characteristic.</span></span></td><td valign="top">962</td><td valign="top"><a href="/data/definitions/962.html" target="_blank" rel="noopener noreferrer">SFP Secondary Cluster: Unchecked Status Condition</a></td></tr><tr class="primary View"><td valign="top">MemberOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/view.gif" alt="View" class="icon"><span class="tip">View - a subset of CWE entries that provides a way of examining CWE content. The two main view structures are Slices (flat lists) and Graphs (containing relationships between entries).</span></span></td><td valign="top">1003</td><td valign="top"><a href="/data/definitions/1003.html" target="_blank" rel="noopener noreferrer">Weaknesses for Simplified Mapping of Published Vulnerabilities</a></td></tr><tr class="primary Category"><td valign="top">MemberOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/category.gif" alt="Category" class="icon"><span class="tip">Category - a CWE entry that contains a set of other entries that share a common characteristic.</span></span></td><td valign="top">1141</td><td valign="top"><a href="/data/definitions/1141.html" target="_blank" rel="noopener noreferrer">SEI CERT Oracle Secure Coding Standard for Java - Guidelines 07. Exceptional Behavior (ERR)</a></td></tr><tr class="primary Category"><td valign="top">MemberOf</td><td valign="top" nowrap class="right" align="center" style="padding-top:1px"><span class="tool"><img src="/images/icons/category.gif" alt="Category" class="icon"><span class="tip">Category - a CWE entry that contains a set of other entries that share a common characteristic.</span></span></td><td valign="top">1181</td><td valign="top"><a href="/data/definitions/1181.html" target="_blank" rel="noopener noreferrer">SEI CERT Perl Coding Standard - Guidelines 03. Expressions (EXP)</a></td></tr></tbody></table></div></div></div></div></div><div id="Notes"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Notes');"><img id="ocimg_754_Notes" src="/images/head_more.gif" border="0" alt="+"></a> </span>Notes</div><div name="oc_754_Notes" id="oc_754_Notes" class="expandblock"><div class="detail"><div class="indent"><p class="subheading">Relationship</p><div class="indent">Sometimes, when a return value can be used to indicate an error, an unchecked return value is a code-layer instance of a missing application-layer check for exceptional conditions. However, return values are not always needed to communicate exceptional conditions. For example, expiration of resources, values passed by reference, asynchronously modified data, sockets, etc. may indicate exceptional conditions without the use of a return value.</div></div></div></div></div><div id="Taxonomy_Mappings"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Taxonomy_Mappings');"><img id="ocimg_754_Taxonomy_Mappings" src="/images/head_more.gif" border="0" alt="+"></a> </span>Taxonomy Mappings</div><div name="oc_754_Taxonomy_Mappings" id="oc_754_Taxonomy_Mappings" class="expandblock"><div class="tabledetail"><div class="indent"><div style="margin-top: 10px"><table width="98%" cellpadding="0" cellspacing="0" border="0" class="Detail"><tr><th valign="top" nowrap width="230px">Mapped Taxonomy Name</th><th valign="top" nowrap width="100px">Node ID</th><th valign="top" nowrap>Fit</th><th valign="top">Mapped Node Name</th></tr>
            <tr><td valign="top">SEI CERT Perl Coding Standard</td><td valign="top">EXP31-PL</td><td valign="top">CWE More Abstract</td><td valign="top">Do not suppress or ignore exceptions</td></tr>
         </table></div></div></div></div></div><div id="References"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_References');"><img id="ocimg_754_References" src="/images/head_more.gif" border="0" alt="+"></a> </span>References</div><div name="oc_754_References" id="oc_754_References" class="expandblock"><div class="detail"><div class="indent"><div id="Grouped"><table width="98%" cellpadding="0" cellspacing="0" border="0" class="Detail">
            <tr><td valign="top"><div id="REF-62">[REF-62] Mark Dowd, John McDonald
							and Justin Schuh. "The Art of Software Security Assessment". Chapter 7, "Program Building Blocks" Page 341. 1st Edition. Addison Wesley. 2006. 
				</div></td></tr>
            <tr><td valign="top"><div id="REF-62">[REF-62] Mark Dowd, John McDonald
							and Justin Schuh. "The Art of Software Security Assessment". Chapter 1, "Exceptional Conditions," Page 22. 1st Edition. Addison Wesley. 2006. 
				</div></td></tr>
            <tr><td valign="top"><div id="REF-44">[REF-44] Michael Howard, David LeBlanc
							and John Viega. "24 Deadly Sins of Software Security". "Sin 11: Failure to Handle Errors Correctly." Page 183. McGraw-Hill. 2010. 
				</div></td></tr>
            <tr><td valign="top"><div id="REF-622">[REF-622] Frank Kim. "Top 25 Series - Rank 15 - Improper Check for Unusual or Exceptional Conditions". SANS Software Security Institute. 2010-03-15. 
				&lt;<a href="http://blogs.sans.org/appsecstreetfighter/2010/03/15/top-25-series-rank-15-improper-check-for-unusual-or-exceptional-conditions/" target="_blank" rel="noopener noreferrer">http://blogs.sans.org/appsecstreetfighter/2010/03/15/top-25-series-rank-15-improper-check-for-unusual-or-exceptional-conditions/</a>&gt;.</div></td></tr>
         </table></div></div></div></div></div><div id="Content_History"><div class="heading"><span id="script"><a href="javascript:toggleblocksOC('754_Content_History');"><img id="ocimg_754_Content_History" src="/images/head_more.gif" border="0" alt="+"></a> </span>Content History</div><div name="oc_754_Content_History" id="oc_754_Content_History" class="expandblock"><div class="tabledetail"><div class="indent"><div style="margin-top: 10px"><table width="98%" cellpadding="0" cellspacing="0" border="0" class="Detail"><thead class="Submissions"><tr><th valign="top" colspan="3" class="title"><span id="script"><a href="javascript:toggleblocksOC('754_Submissions');"><img id="ocimg_754_Submissions" src="/images/head_more.gif" border="0" alt="+"></a> </span>Submissions</th></tr></thead><tbody id="oc_754_Submissions" class="expandblock"><tr><th valign="top">Submission Date</th><th valign="top" nowrap>Submitter</th><th valign="top" nowrap>Organization</th></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2009-03-03</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">New entry for reorganization of <a href="/data/definitions/703.html">CWE-703</a>. </td></tr></tbody><thead class="Modifications"><tr><th valign="top" colspan="3" class="title"><span id="script"><a href="javascript:toggleblocksOC('754_Modifications');"><img id="ocimg_754_Modifications" src="/images/head_less.gif" border="0" alt="+"></a> </span>Modifications</th></tr></thead><tbody id="oc_754_Modifications" class="collapseblock"><tr><th valign="top">Modification Date</th><th valign="top" nowrap>Modifier</th><th valign="top" nowrap>Organization</th></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2009-07-27</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Relationships</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2009-12-28</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Applicable_Platforms, Likelihood_of_Exploit, Time_of_Introduction</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2010-02-16</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Background_Details, Common_Consequences, Demonstrative_Examples, Description, Detection_Factors, Name, Observed_Examples, Potential_Mitigations, References, Related_Attack_Patterns, Relationship_Notes, Relationships</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2010-04-05</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Demonstrative_Examples, Related_Attack_Patterns</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2010-06-21</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Common_Consequences, Detection_Factors, Potential_Mitigations, References</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2010-09-27</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Potential_Mitigations</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2010-12-13</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Relationship_Notes</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2011-03-29</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Description, Relationships</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2011-06-01</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Common_Consequences</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2011-06-27</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Common_Consequences, Related_Attack_Patterns, Relationships</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2011-09-13</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Relationships, Taxonomy_Mappings</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2012-05-11</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Relationships</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2012-10-30</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Potential_Mitigations</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2013-02-21</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Relationships</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2014-07-30</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Demonstrative_Examples, Relationships</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2015-12-07</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Relationships</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2017-01-19</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Relationships</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2017-11-08</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Modes_of_Introduction, References, Relationships, Taxonomy_Mappings</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2019-01-03</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Relationships, Taxonomy_Mappings</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2019-06-20</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Description, Relationships</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2020-02-24</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Potential_Mitigations, Relationships</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2020-06-25</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Potential_Mitigations</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2020-12-10</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Potential_Mitigations</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2021-03-15</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Demonstrative_Examples, Relationships</td></tr><tr><td valign="top" nowrap rowspan="2" style="border-bottom:1px solid #BAC5E3">2021-07-20</td><td valign="top">CWE Content Team</td><td valign="top">MITRE</td></tr><tr><td valign="top" colspan="2" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee">updated Relationships</td></tr></tbody><thead class="Previous_Entry_Names"><tr><th valign="top" colspan="3" class="title"><span id="script"><a href="javascript:toggleblocksOC('754_Previous_Entry_Names');"><img id="ocimg_754_Previous_Entry_Names" src="/images/head_less.gif" border="0" alt="+"></a> </span>Previous Entry Names</th></tr></thead><tbody id="oc_754_Previous_Entry_Names" class="collapseblock"><tr><th valign="top" nowrap>Change Date</th><th valign="top" nowrap colspan="3">Previous Entry Name</th></tr><tr><td valign="top" nowrap>2010-02-16</td><td valign="top" colspan="2">Improper Check for Exceptional Conditions</td></tr><tr><td style="border-bottom:1px solid #BAC5E3" colspan="3"></td></tr></tbody></table></div></div></div></div></div></div></html>            	<div id="More_Message">
<div style="background-color:#798795; padding:2px; color:#ffffff; font-size:95%; text-align:center" >More information is available &mdash; Please select a different filter.</div></div>

	</td>
	<!-- end content pane -->
  </tr>
</table>
<div id="FootPane" class="noprint">
  <div id="footbar">
    <b>Page Last Updated: </b>

            July 20, 2021              </div>
  <div class="Footer noprint">
    <table width="100%" cellpadding="0" cellspacing="0" border="0" class="ltgreybackground" style="clear:both">
      <tr>
        <td colspan="3" id="line"><div class="line">&nbsp;</div></td>
      </tr>
      <tr>
        <td valign="middle" nowrap="nowrap">
          <div id="footerlinks" class="footlogo">
            <a href="http://www.mitre.org" target="_blank" rel="noopener noreferrer"><img src="/images/mitre_logo.gif" height="36" border="0" alt="MITRE" title="MITRE"/></a>
          </div>
        </td>
        <td width="100%" valign="top" style="padding:6px 0px;">
          <div id="footerlinks">
            <a href="/sitemap.html">Site Map</a> | 
            <a href="/about/termsofuse.html">Terms of Use</a> | 
            <a href="/about/privacy_policy.html">Privacy Policy</a> | 
            <a href="mailto:cwe@mitre.org">Contact Us</a> | 
            <a target="_blank" href="https://twitter.com/CweCapec"><img src="/images/twitter.jpg" width="20" height="20" style="border:0;vertical-align:right;" alt="Twitter" title="Twitter"></a>
            <a target="_blank" href="https://www.linkedin.com/showcase/cve-cwe-capec"><img src="/images/linkedin_sm.jpg" width="20" height="20" style="border:0;vertical-align:right;" alt="LinkedIn" title="LinkedIn"></a>
      <a target="_blank" href="https://www.youtube.com/channel/UCpY9VIpRmFK4ebD6orssifA"><img src="/images/youtube.png" width="20" height="20" style="border:0;vertical-align:right;" alt="YouTube channel" title="YouTube"></a>  
			<a target="_blank" href="https://medium.com/@CWE_CAPEC"><img src="/images/medium.png" width="20" height="20" style="border:0;vertical-align:right;" alt="Medium blog" title="Medium"></a>   
          </div>
          <p>Use of the Common Weakness Enumeration (CWE) and the associated references from this website are subject to the <a href="/about/termsofuse.html">Terms of Use</a>. CWE is sponsored by the <a target="_blank" rel="noopener noreferrer" href="https://www.dhs.gov/">U.S. Department of Homeland Security</a> (DHS) <a target="_blank" rel="noopener noreferrer" href="https://www.dhs.gov/cisa/cybersecurity-division">Cybersecurity and Infrastructure Security Agency</a> (CISA) and managed by the <a href="https://www.dhs.gov/science-and-technology/hssedi" target="_blank" rel="noopener noreferrer">Homeland Security Systems Engineering and Development Institute</a> (HSSEDI) which is operated by <a target="_blank" rel="noopener noreferrer" href="http://www.mitre.org/">The MITRE Corporation</a> (MITRE). Copyright &copy; 2006-2021, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.</p>
        </td>
        <td valign="middle" nowrap="nowrap">
          <div id="footerlinks" class="footlogo">
            <a href="https://www.dhs.gov/science-and-technology/hssedi" target="_blank" rel="noopener noreferrer"><img src="/images/hssedi.png" height="36" border="0" alt="HSSEDI" title="HSSEDI"/></a>
          </div>
        </td>
      </tr>
    </table>
  </div>
</div>
<!-- Google Analytics Code -->
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5164081-1");
pageTracker._trackPageview();
</script>

</body>
</html>

            
            