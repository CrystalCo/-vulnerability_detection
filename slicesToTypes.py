import os

def getTypeIds(slicepath, totalSamples=None):
    """
        Extracts the vulnerability type ID from the slice titles. 
        Opens all source code files, extracts filenames per slice for given sample size (for testing), and keeps track of filenames that omit the CWE/CVE ID."
    """
    IDs_all = set()
    IDs_all_count = 0
    nonIDs_all = set()
    nonIDs_all_count = 0

    for filename in os.listdir(slicepath):
        IDs_by_file = set()
        nonIDs_by_file = set()
        if (filename.endswith(".txt") is False):
            continue
        filepath = os.path.join(slicepath, filename)
        f1 = open(filepath)
        slicelists = f1.read().split("------------------------------")
        f1.close()

        if slicelists[0] == '':
            del slicelists[0]
        if slicelists[-1] == '' or slicelists[-1] == '\n' or slicelists[-1] == '\r\n':
            del slicelists[-1]

        if (totalSamples is not None):
            # limit number of slices scanned
            slicelists = slicelists[:totalSamples]

        type_count = 0
        na_count = 0
        total_count = 0
        for slicelist in slicelists:
            total_count += 1
            sentences = slicelist.split('\n')
            if sentences[0] == '\r' or sentences[0] == '':
                # Remove newlines that appear at the beginning of a title
                del sentences[0]
            if sentences == []:
                continue
            if sentences[-1] == '':
                del sentences[-1]
            if sentences[-1] == '\r':
                del sentences[-1]

            title = sentences[0].split(" ")[1].split("/")[1]
            # some have IDs, some don't
            # for example, 56327 151098/ffmpeg.c memset 344 doesn't have a CWE || CVE id in it.
            if ('CWE' in title):
                type_count += 1
                id_types = title.split('_')
                weakness_id = list(filter(lambda x: 'CWE' in x, id_types))
                for w_id in weakness_id:
                    IDs_all.add(w_id)
                    IDs_by_file.add(w_id)
            if ('CWE' not in title and 'CVE' not in title):
                na_count += 1
                nonIDs_all.add(title)
                nonIDs_by_file.add(title)

        IDs_all_count += type_count
        nonIDs_all_count += na_count
        print(f'Filename: {filename}')
        print(f'Slice titles with CWE/CVE IDs included: {type_count}')
        # print(f'CWE/CVE IDs: {IDs_by_file}')
        print(f'Slice titles with CWE/CVE IDs excluded: {na_count}')
        # print(f'Titles excluding CWE/CVE IDs: {nonIDs_by_file}')
        print(f'Total slices extracted: {total_count} \n')
    
    print('Total slices that contain IDs: %s \tTotal slices w/o IDs: %s' % (IDs_all_count, nonIDs_all_count))

def test_getTypeIds():
    slicePath = './data/slicesSource/'
    totalSamples = 5
    getTypeIds(slicePath)

test_getTypeIds()
