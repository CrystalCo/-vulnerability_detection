#!/usr/bin/env python
# coding: utf-8

# Our goal is to upsample all classes with vulnerable samples of size < 1500 to at least 1500 samples.
# 
# Next, we'll create a python script that will run the upsample for our training and test sets.
# 
# Finally, we will rerun our model on the new upsampled data.


import os, pickle, gc

import numpy as np

from utils import get_vul_samples

# merge trian & test file or get one that already exists

def output_vul_data(filepath):
    with open(filepath, 'rb') as f:
        data = pickle.load(f)
    print("Samples in original set: ", len(data[-1]))

    data = get_vul_samples(data)
    print("number of vulnerable samples in original set: ", len(data[-1]))
    
    return data
 

vector_path = os.path.join('data', 'MLvectors') # doing on vectors and not inputs because vectors have our original CWE label while inputs has the hot-encoded labels
in_paths = [os.path.join(vector_path, 'ALL_averaged_vectors_granular', 'ALL_vectors.pkl')]
vector_path = os.path.join('data', 'DLvectors') # doing on vectors and not inputs because vectors have our original CWE label while inputs has the hot-encoded labels
out_paths = [os.path.join(vector_path, 'ALL_vectors_granular_vulnerable_only')]

for inpath, outpath in zip(in_paths, out_paths):
    final_set = output_vul_data(inpath)

    # randomseed shuffle; randomSeed=1099
    for i in range(len(final_set)):
        np.random.seed(1099)
        np.random.shuffle(final_set[i])

    print("Samples in new set: ", len(final_set[-1]))
    classes, y_indices = np.unique(final_set[-2], return_inverse=True)
    class_counts = np.bincount(y_indices)
    class_indices = np.split(np.argsort(y_indices, kind='mergesort'), np.cumsum(class_counts)[:-1])
    print(f'Classes: {classes}.\n\nClass Counts:{class_counts}.\n')

    newpath = os.path.join(outpath, "ALL_vectors.pkl")
    f_train = open(newpath, 'wb')
    pickle.dump(final_set, f_train, protocol=pickle.HIGHEST_PROTOCOL)
    f_train.close()
    del final_set
    gc.collect()
    print(f'set saved in {newpath}\n\n')




