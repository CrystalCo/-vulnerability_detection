import os, ast

from pprint import pprint

from utils.get_CWE_methods import get_ID_dict, get_vul_line_num_from_SARD


# Write a script that cross checks the vulnerability label and line 

#  3 parts:
    # Part 1: parse all SARD test cases that only contain 1 file & 1 vul line number
    # Part 2: parse the remaining by delim
    # Part 3: update labels
    # Part 4: cross check labels against our own


# Pull SARD IDs
# Using CWE_IDs.txt because SARD_IDs.txt contains duplicates
cwe_ids_file = os.path.join('data', 'CWE', 'CWE_IDs.txt')
SARD_IDs = get_ID_dict(cwe_ids_file)

# test data
# SARD_IDs = {
#     # Example of a comment at the end of the vulnerable line
#     '110408': {
#         'CWE-ID': '401',
#         'vulnerable_line_nums': set()
#     },
#     # /* BAD */ in line of vul & .cc
#     '1762': {
#         'CWE-ID': '401',
#         'vulnerable_line_nums': set()
#     },
#     # single vul num, but vul delim in multiple lines
#     '100005': {
#         'CWE-ID': '401',
#         'vulnerable_line_nums': set()
#     },
#     # case: STONESOUP
#     '150043': {
#         'CWE-ID': '401',
#         'vulnerable_line_nums': set()
#     },
#     # case: contains >1 vul line number
#     '65292': {
#         'CWE-ID': '121',
#         'vulnerable_line_nums': set()
#     }, 
#     # case: >1 vul filename
#     '78931': {
#         'CWE-ID': '127',
#         'vulnerable_line_nums': set()
#     },
    # case: mult files, 2 lines are comments
    # '104578': {
    #     'CWE-ID': '476',
    #     'vulnerable_line_nums': set()
    # },
#     # case: 1 file 1 vul line number, but comment as vul line
#     '105801': {
#         'CWE-ID': '563',
#         'vulnerable_line_nums': set()
#     },
#     # case: 2 comments before vul line
#     '104586': {
#         'CWE-ID': '476',
#         'vulnerable_line_nums': set()
#     },
#     # case: printed to console as no file;; .cpp
#     '102802': {
#         'CWE-ID': '426',
#         'vulnerable_line_nums': set()
#     }
# }


scrapeout_path = os.path.join('data', '_temporaries', 'scrapeout.txt')
get_vul_line_num_from_SARD(SARD_IDs, scrapeout_path)

# Save SARD_IDs dict
scrapeout_path = os.path.join('data', '_SARD', 'sard_vulnerabilities.txt')
pprint(SARD_IDs, stream=open(scrapeout_path, 'w'), width=300)

